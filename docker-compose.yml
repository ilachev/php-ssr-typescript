version: '3.7'

services:
    gateway:
        build:
            context: gateway/docker
            dockerfile: development/nginx/nginx.docker
        ports:
            - "8080:8080"
            - "8081:8081"
            - "8082:8082"
        depends_on:
            - front
            - api
            - storage

    api-php-fpm:
        build:
            context: api/docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
        env_file: &env_files
            - .env
            - .env.local
        volumes:
            - ./api:/srv/api:rw,cached
            - ./api/var:/srv/api/var:rw
        depends_on:
            - db
            - redis
            - storage

    api-php-cli:
        build:
            context: api/docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
        env_file: *env_files
        volumes:
            - ./api:/srv/api:rw,cached
            - ./api/var:/srv/api/var:rw
            - sitemap-data:/srv/api/var/sitemap
        depends_on:
            - db
            - redis
            - storage

    api:
        build:
            context: ./api/docker/development
            dockerfile: nginx.docker
        environment:
            DEPLOY_URL: $DEPLOY_URL
        logging:
            options:
                max-size: "50m"
        volumes:
            - ./api/public:/srv/api/public:ro
            - ./api/docker/development/nginx/conf.d/default.dev.conf:/etc/nginx/conf.d/default.conf:ro
            - ./api/uploads:/srv/api/uploads:ro
        depends_on:
            - api-php-fpm

    redis:
        build:
            context: ./api/docker/development
            dockerfile: redis.docker
            args:
                REDIS_VERSION: $REDIS_VERSION
        environment:
            TZ: ${TZ}
        logging:
            options:
                max-size: "50m"
        volumes:
            - redis-data:/data:rw

    db:
        build:
            context: ./api/docker/development
            dockerfile: postgres.docker
        env_file: *env_files
        volumes:
            - db-data:/var/lib/postgresql/data:rw
        ports:
            - "5432:5432"

    admin-node:
        image: node:13-alpine
        volumes:
            - ./api:/srv/api:rw,cached
            - ./api/node_modules:/srv/api/node_modules:rw,cached
        working_dir: /srv/api

    front:
        build:
            context: ./front/docker/development
            dockerfile: nginx.docker
        volumes:
            - ./front:/srv/front:rw,cached
        depends_on:
            - front-node

    front-node:
        build:
            context: ./front/docker/development
            dockerfile: node.docker
        volumes:
            - ./front:/srv/front:rw,cached
            - ./front/node_modules:/srv/front/node_modules:rw,cached
            - ./front/.next:/srv/front/.next:rw,cached
            - sitemap-data:/srv/front/public/sitemap
        tty: true

    storage:
        build:
            context: ./storage/docker/development
            dockerfile: nginx.docker
        volumes:
            - ./storage:/srv/storage

    storage-ftp:
        image: stilliard/pure-ftpd
        environment:
            FTP_USER_NAME: app
            FTP_USER_PASS: secret
            FTP_USER_HOME: /srv/storage
        volumes:
            - ./storage/public:/srv/storage

    mailer:
        image: mailhog/mailhog
        ports:
            - "8083:8025"

volumes:
    db-data: ~
    redis-data: ~
    sitemap-data: ~